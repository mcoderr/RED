--- RCPTT testcase ---
Format-Version: 1.0
Context-Type: org.eclipse.rcptt.ctx.ecl
Element-Name: DocumentationProcedures
Element-Type: context
Element-Version: 2.0
Id: _hb89IDvxEeiDC73Fvf4wHA
Runtime-Version: 2.2.0.201706152316
Save-Time: 5/29/18 11:01 AM

------=_.ecl.context-718f04b4-ed39-33e3-af62-0995e4561998
Content-Type: text/ecl
Entry-Name: .ecl.context

global [val html_beginning "(<!DOCTYPE html>\\\\n)?<html><head><meta charset=\"utf-8\"><style>body \{    color: rgb\(0,0,0\);    "
	+ "background-color: rgb\(255,255,2[25]5\);    font-size: small;    font-family: sans-serif;\}code "
	+"\{    background-color: rgba\(220, 220, 220, 0.5\);    font-size: 1.1em;\}a, a:link, a:visited "
	+"\{    color: #c30;\}a:hover, a:active \{    text-decoration: underline;    color: black;\}"
	+"a:hover \{   text-decoration: underline !important;\}pre \{    margin-left: 0.7em;    "
	+"background-color: rgba\(220, 220, 220, 0.5\);\}table, th, td "
	+ "\{    border: 1px solid #a6a6a6;    border-collapse: collapse;    border-spacing: 2px;    padding: 4px;"
	+"    font-size: 0.9em;\}</style></head>"]
	
	   
global [val html_standard_kw "%s<body.*>.*/org.robotframework.ide.eclipse.main.plugin/docs/keyword.png\"/?> %s</h3>"   // $html_beginning $kw_nam
			+ "<p><b>Source: </b><span style=.*><a href=\"library:/%s/%s/%s\?show_source=true\">%s" 		//$project_name / $library  /  $kw_name2  > $library
			+ "</a> \[<a href=\"library:/%s/%s\?show_doc=true\">Documentation</a>\]</span><br/?>"  			// $project_name/ $library
			+ "<b>Arguments: </b><span.*>%s"																		//$arguments
			+"</span><br/?></p><p>%s(</p>)?"
			+ "</body></html>"] 														// $spec	
																		  			 
	   
global [val html_user_kw "%s<body.*>.*org.robotframework.ide.eclipse.main.plugin/docs/keyword_user.png\"/?> %s</h3>"   // $html_beginning $kw_nam
		+ "<p><b>Source: </b><span style=.*><a href=\"file:/.*%s\?show_source=true.*keyword=%s\">%s</a> "   //$path  $path   $kw_name2
		+"\[<a href=\"file:.*%s\?show_doc=true.*suite=\">Documentation</a>\]"									//path
		+ "</span><br/?><b>Arguments: </b><span style=.*>%s" 													//$args
		+ "</span><br/?></p>(<p>)?%s(</p>)?</body></html>"]
			   													// $spec
		
global [val html_test "%s<body.*>.*/org.robotframework.ide.eclipse.main.plugin/docs/case.png\"/?> %s</h3>"   // $html_beginning $tc_name
			+ "<p><b>Source: </b><span.*>"
			+ "<a href=\"file:.*%s\?show_source=true.*>%s</a> "                         				  //$path    $path
			+ "\[<a href=\"file:/.*%s\?show_doc=true.*>Documentation</a>\]"								  // $path 
			+ "</span><br/?></p><p>%s</p></body></html>" ]	   												  //$spec
	   

global [val html_test_file "%s<body.*><h3>.*org.robotframework.ide.eclipse.main.plugin/docs/file_robot.png\"/?> %s</h3>"   // $html_beginning $file_name
			+ "<p><b>Source: </b><span.*>"
			+ "<a href=\"file:.*%s\">%s</a></span><br/?></p>"        													//$path2    $path
			+ "<h2>Introduction</h2>"    
			+ "<p>%s</p>"  																								// intro
			+ "<h2 id=\"Shortcuts\">Shortcuts</h2><p>"   
			+ "%s"        				  																				//shortcuts
			+ "</p></body></html>"  
			+ ".*"]	 

global [val html_library "%s<body.*><h3>.*org.robotframework.ide.eclipse.main.plugin/docs/book.png\"/?> %s</h3>"   // $html_beginning $file_name
			+ "<p><b>Source: </b><span.*>"
			+ "<a href=\"library:/%s/%s\?show_source=true\">%s</a></span><br/?>"			//$project_name  source2 spource
			+ "<b>Version: </b><span.*\">%s</span><br/?>"
			+ "<b>Scope: </b><span.*\">%s</span><br/?>"
			+ "<b>Arguments: </b><span.*\">%s</span><br/?></p>"
			+ "<h2>Introduction</h2>"    
			+ "<p>%s</p>"  																								// intro
			+ "<h2 id=\"Shortcuts\">Shortcuts</h2><p>"   
			+ "%s"        				  																				//shortcuts
			+ "</p></body></html>"  ]	 	
			
global [val html_error "%s<body.*>"
			+ "<table.*>"
			+ "(<tbody>)?"
			+ "<tr .*\">"
			+ "<td .*\"><img .*file:.*docs/big_error.png\"(/)?></td>"
			+ "<td .*\"><b>Unable to retrieve document from browsing history: </b>"
			+ "<span .*\">%s</span></td>"
			+ "</tr>(</tbody>)?</table></body></html>"]	
								
//------------------------------------------ scripts -------------------------------------------------	     
proc "check-information-window" [val inner_html]{
	get-window -from "Information Window" | get-control Browser | get-property text 
	    | matches [concat $html_beginning  $inner_html ] | verify-true
}


proc "check-error-in-information-window" [val text]{
	check-information-window [format "<body.*\">%s</body></html>"  $text]
}

proc "create-shortcuts-list" [val sh_list] [val path]{
	concat [$sh_list |each [val item ] 
	{
		format  "<a href=\"file:.*%s\?show_doc.*keyword=%s\">%s</a> (&middot;|路) " $path [replace -input $item -old " " -new "\%20"] $item
	}]  | str | invoke replaceAll "( \(&middot;\|路\) )$" "" 
}

proc "create-shortcuts-list-for-library" [val sh_list] [val path]{
	concat [$sh_list |each [val item ] 
	{
		format  "<a href=\"library:.*%s/%s\?show_doc=true\">%s</a> (&middot;|路) " $path [replace -input $item -old " " -new "\%20"] $item
	}]  | str | invoke replaceAll "( \(&middot;\|路\) )$" "" 
}


//------------------------------------------ content assist --------------------------------------------
proc "check-content-assist-documentation-for-variables" [val source "Built-in"]  [val value] {
	if [$value | eq ""]{
		get-window -from "CompletionProposalPopup.createProposalSelector()" | get-window -from "Information Window" 
	    	| get-control Browser | get-property text 
	    	| equals [format  "%s<body.*\"><p><b>Source:</b> %s</p></body></html>"  $html_beginning $source]| verify-true
	}-else{
		get-window -from "CompletionProposalPopup.createProposalSelector()" | get-window -from "Information Window" 
		    | get-control Browser | get-property text 
		    | equals [format  "%s<body.*\"><p><b>Source:</b> %s</p>\\\\n<p><b>Value:</b> %s</p></body></html>" $html_beginning $source $value]| verify-true
	}	    
	    
}
//----------------------------------------doc view ----------------------------
//all arguments must be escaped for regex!
proc "check-documentation-view" [val kw_name ] [val project_name "RobotProject"] [val library ] [val arguments "\[\]"] [val spec ""] [val is_empty false]{
	if [$is_empty | eq true]{
		get-view "Documentation View" | get-control Browser | get-property text  | equals  [concat $html_standard_kw  "<body></body></html>"]
	}-else{
		let [val kw_name2 [replace -input $kw_name -old " " -new "\%20"]]{
			get-view "Documentation View" | get-control Browser | get-property text 
				| equals [format $html_standard_kw  $html_beginning $kw_name $project_name $library $kw_name2 $library $project_name $library  $arguments $spec] | verify-true
		}
	}
}	

proc "check-documentation-view-for-user-kw" [val kw_name ""] [val path ""] [val arguments "\[\]" ] [val spec ""]{
	let [val kw_name2 [replace -input $kw_name -old " " -new "\%20"] ]{
		get-view "Documentation View" | get-control Browser | get-property text 
			| equals [format $html_user_kw  $html_beginning $kw_name $path  $kw_name2 $path $path $arguments $spec ] | verify-true
	}
}


proc "check-documentation-view-for-tc" [val tc_name] [val path ""] [val spec]{
	if [$tc_name | contains " "]{
		let [val kw_name2 [replace -input $tc_name -old " " -new "\%20"] ]{
			get-view "Documentation View" | get-control Browser | get-property text 
				| equals [format $html_test  $html_beginning $tc_name  $path $path $path $spec] | verify-true
		}
	}
}

proc "check-documentation-view-for-file" [val file_name] [val project_name][val path] [val intro] [val shortcuts]{
	let [val path2 [replace -input $path -old " " -new "\%20"] ]{
		get-view "Documentation View" | get-control Browser | get-property text 
			| equals [format $html_test_file  $html_beginning $file_name $path2 $path $intro [create-shortcuts-list -sh_list $shortcuts -path $path2]] | verify-true
	}
}	

proc "check-documentation-view-for-library" [val file_name] [val project_name][val source] [val version ""][val scope "global"] [val args] [val intro] [val shortcuts]{
	create-shortcuts-list-for-library -sh_list $shortcuts -path $source | log
	let [val source2 [replace -input $source -old " " -new "\%20"] ]{
		get-view "Documentation View" | get-control Browser | get-property text 
			| equals [format $html_library  $html_beginning $file_name $project_name $source2 $source $version $scope $args $intro [create-shortcuts-list-for-library -sh_list $shortcuts -path $source]] | verify-true
	}
}


proc "check-documentation-view-for-error"  [val error]{
	get-view "Documentation View" | get-control Browser | get-property text 
		| equals [format $html_error  $html_beginning  $error] | verify-true
	
}	

//--------------------------------------  information view -----------------------------------------------

proc "check-information-view-doc-for-kw" [val kw_name] [val project_name "RobotProject"] [val library] [val arguments] [val spec]{
	if [$kw_name | contains " "]{
		let [val kw_name2 [replace -input $kw_name -old " " -new "\%20"] ]{
			get-window -from "Information Window" | get-control Browser | get-property text
				| equals [format $html_standard_kw  $html_beginning $kw_name $project_name $library $kw_name2 $library $project_name $library  $arguments $spec] | verify-true
		}
	}
}

proc "check-information-view-doc-for-user-kw" [val kw_name] [val path ""][val arguments] [val spec]{
	if [$kw_name | contains " "]{
		let [val kw_name2 [replace -input $kw_name -old " " -new "\%20"] ]{
			get-window -from "Information Window" | get-control Browser | get-property text
				| equals [format $html_user_kw  $html_beginning $kw_name $path  $kw_name2 $path $path $arguments $spec ] | verify-true
		}
	}
}


proc "check-information-view-for-file" [val file_name] [val project_name][val path] [val intro] [val shortcuts]{
	let [val path2 [replace -input $path -old " " -new "\%20"] ]{
		get-window -from "Information Window" | get-control Browser | get-property text
			| equals [format $html_test_file  $html_beginning $file_name $path2 $path $intro [create-shortcuts-list -sh_list $shortcuts -path $path2]] | verify-true
	}
}	

//------------------------------------------------------------------------------------------------

proc "click-link-in-doc-view"[val link]{
//	get-view "Documentation View" | get-control Browser |  get-object | invoke evaluate [format "document.querySelector('a[href$=\"%s\"]').click()" $link]
	get-view "Documentation View" | get-control Browser |  get-object | invoke evaluate [format "for (var i = 0, list = document.getElementsByTagName(\"a\"); i < list.length; i++) {if (list[i].text ==\"%s\"){list[i].click()}}" $link]
	
}

------=_.ecl.context-718f04b4-ed39-33e3-af62-0995e4561998--
