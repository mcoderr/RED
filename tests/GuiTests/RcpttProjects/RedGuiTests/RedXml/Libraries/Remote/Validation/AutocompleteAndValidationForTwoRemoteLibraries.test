--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _YDbWsNnJEeeKxYJgF2NTmg,_mejWYN5REeeM0Z7Do3ZSmA
Element-Name: AutocompleteAndValidationForTwoRemoteLibraries
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _tMPTMN5NEeeM0Z7Do3ZSmA
Runtime-Version: 2.2.0.201706152316
Save-Time: 6/27/18 5:21 PM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

//
//                          before test install: pip install robotremoteserver   
//
//
// run PythonRemoteServer
run-python-remote-server-in-background -lib_name my_remote_lib.py -timeout 10

// run PythonRemoteServer
run-python-remote-server-in-background -lib_name my_second_remote_lib.py -timeout 10

// go to .robot file
with [get-view "Project Explorer" | get-tree] {
    select "RobotProject/TestFile.robot" | double-click
}
// verify if there is 3 errors
get-view Problems | click
wait-for-errors -amount 2 -times 2 -delay 1000
// add first location to red.xml
get-view "Project Explorer" | get-tree | select "RobotProject/red.xml" | double-click
with [get-editor "RobotProject/red.xml"] {
    get-tab-folder | get-tab-item "Referenced libraries" | click
    get-section "Referenced libraries" | get-button "Add Remote location" | click
}
with [get-window "Add Remote location"] {
    get-editbox -after [get-label URI] | set-text "http://127.0.0.1:9000/"
    get-button OK | click
}
// add second location to red.xml
get-editor "RobotProject/red.xml" | get-section "Referenced libraries" | get-button "Add Remote location" | click
with [get-window "Add Remote location"] {
    get-editbox -after [get-label URI] | set-text "http://127.0.0.1:10000/"
    get-button OK | click
}
// save red.xml
get-editor "RobotProject/red.xml" | get-section "Referenced libraries" | get-button "Add Remote location" 
    | key-type "M1+s"
// revalidate in Source
with [get-editor "TestFile.robot"] {
    click
    with [get-text-viewer] {
        set-caret-pos 4 1
        key-type Enter
        key-type "M1+s"
    }
}
// verify no Problems
get-view Problems | get-label "0 items" | get-property caption | equals "0 items" | verify-true
// use content assist to use remote libraries with alias in Source
with [get-editor "TestFile.robot" | get-text-viewer] {
    set-caret-pos 7 19
    key-type Enter
    type-text tc
    key-type Enter
    type-text "${x}=  remote"
    key-type "M1+SPACE"
    key-type Down -times 2
    key-type Enter
}
// verify context assist
with [get-window -from "CompletionProposalPopup.createProposalSelector()" | get-table] {
    get-property "getItems().TableItem[0].getText()" | equals "Other Func - remote1" | verify-true
    get-property "getItems().TableItem[1].getText()" | equals "Return Some String - remote1" | verify-true
    get-property "getItems().TableItem[2].getText()" | equals "Stop Remote Server - remote1" | verify-true
}
get-window -from "CompletionProposalPopup.createProposalSelector()" | get-table | select "Other Func - remote1" | click 
    -default
// add second remote with alias
with [get-editor "TestFile.robot" | get-text-viewer] {
    set-caret-pos 9 30
    key-type Enter
    type-text "${y}=  remote1."
    key-type "M1+SPACE"
    key-type Down
    key-type Enter -times 3
    type-text "${x}=  remote2."
    key-type "M1+SPACE"
}
// verify content assist
with [get-window -from "CompletionProposalPopup.createProposalSelector()" | get-table] {
    get-property "getItems().TableItem[0].getText()" | equals "Other Func Second - remote2" | verify-true
    get-property "getItems().TableItem[1].getText()" | equals "Return Some String Second - remote2" | verify-true
    get-property "getItems().TableItem[2].getText()" | equals "Stop Remote Server - remote2" | verify-true
}
get-window -from "CompletionProposalPopup.createProposalSelector()" | get-table | select "Other Func Second - remote2" 
    | click -default
// add keyword to stop server
with [get-editor "TestFile.robot" | get-text-viewer] {
    set-caret-pos 12 37
    key-type Enter
    type-text "${y}=  remote2."
    key-type "M1+SPACE"
    key-type Down
    key-type Enter
    key-type "M1+s"
    key-type Enter -times 2
    type-text "${x}=  remo"
    key-type "M1+SPACE"
    key-type Down
    key-type Enter -times 2
    type-text "${y}=  rem"
    key-type "M1+SPACE"
    key-type Down -times 2
    key-type Enter -times 2
    type-text "${x}=  remo"
    key-type "M1+SPACE"
    key-type Down
    key-type Enter -times 2
    type-text "${y}=  rem"
    key-type "M1+SPACE"
    key-type Down -times 2
    key-type Enter
    key-type "M1+s"
}
// run test to kill remote server
get-view "Project Explorer" | get-tree | select "RobotProject/TestFile.robot" | select "RobotProject/TestFile.robot" 
    | get-menu -path "Run As/1 Robot Test" | click
    
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
